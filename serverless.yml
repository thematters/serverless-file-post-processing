service:
  name: file-post-processing

custom:
  bucket:
    develop: matters-server-stage
    production: matters-server-production
  webpack:
    webpackConfig: ./webpack.config.js
    includeModules: true

plugins:
  - serverless-webpack

provider:
  name: aws
  region: ap-southeast-1
  runtime: nodejs12.x
  memorySize: 512
  timeout: 6
  versionFunctions: false
  iamRoleStatements:
    - Effect: Allow
      Action:
        - s3:*
      Resource: 'arn:aws:s3:::${self:custom.bucket.${self:provider.stage}}/*'
  stage: ${opt:stage, 'develop'}

functions:
  imageCreated:
    handler: src/imageCreated.handler
    description: resize & compress images
    events:
      # - s3:
      #   bucket: ${self:custom.bucket.${self:provider.stage}}
      #   event: s3:ObjectCreated:*
      #   rules:
      #     - suffix: .png
      # - s3:
      #   bucket: ${self:custom.bucket.${self:provider.stage}}
      #   event: s3:ObjectCreated:*
      #   rules:
      #     - suffix: .jpg
      - s3:
          bucket: ${self:custom.bucket.${self:provider.stage}}
          event: s3:ObjectCreated:*
          rules:
            - suffix: .jpeg
      # - s3:
      #   bucket: ${self:custom.bucket.${self:provider.stage}}
      #   event: s3:ObjectCreated:*
      #   rules:
      #     - suffix: .svg
      # - s3:
      #   bucket: ${self:custom.bucket.${self:provider.stage}}
      #   event: s3:ObjectCreated:*
      #   rules:
      #     - suffix: .gif
      # - s3:
      #   bucket: ${self:custom.bucket.${self:provider.stage}}
      #   event: s3:ObjectCreated:*
      #   rules:
      #     - suffix: .webp
    memorySize: 1024
    timeout: 10

resources:
  Resources:
    S3BucketOutputs:
      Type: AWS::S3::Bucket
      Properties:
        BucketName: ${self:custom.bucket.${self:provider.stage}}
